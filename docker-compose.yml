version: '2'

services:
  jupyterhub:
    build: jupyterhub
    image: jupyterhub_img
    container_name: jupyterhub
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - jupyterhub-data:/volatile/docker
    environment:
      DOCKER_JUPYTER_CONTAINER: jupyterlab_img
      #DOCKER_JUPYTER_CONTAINER: testimage
      DOCKER_NETWORK_NAME: ${COMPOSE_PROJECT_NAME}-network
      HUB_IP: jupyterhub
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:is228931.intra.cea.fr"
    restart: on-failure
    #networks:
    #  - ${COMPOSE_PROJECT_NAME}-network

  jupyterlab:
    build: jupyterlab
    image: jupyterlab_img
    container_name: jupyterlab-throaway
    network_mode: none
    command: echo

  reverse-proxy:
    image: traefik
    container_name: reverse-proxy
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./reverse-proxy/traefik.toml:/etc/traefik/traefik.toml
      - /etc/ssl/jupyterhub:/etc/ssl/jupyterhub
      - /var/run/docker.sock:/var/run/docker.sock
    restart: on-failure

#  oauth2_server:
#    image: defeo/cas2oauth2bridge
#    container_name: c2o2b
#    volumes:
#      - ./oauth2/config.js:/home/node/config.js
#    labels:
#      - "traefik.enable=true"
#      - "traefik.frontend.rule=Host:jupyter.ens.uvsq.fr;PathPrefixStrip:/c2o2b/"
#    restart: on-failure

volumes:
  jupyterhub-data:
#  data:
#    external:
#      name: ${COMPOSE_PROJECT_NAME}-data

networks:
  default:
    external:
      name: ${COMPOSE_PROJECT_NAME}-network
#  jupyterhub-network:
#    driver: bridge
